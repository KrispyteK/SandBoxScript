{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	//  "scope": "javascript,typescript",
	//  "prefix": "log",
	//  "body": [
	//      "console.log('$1');",
	//      "$2"
	//  ],
	//  "description": "Log output to console"
	// }

	"Function":{
		"prefix": "fn",
		"description": "Function Definition",
		"body": [
			"fn ${2:newFunction}($3) {",
			"\t$0",
			"}"
		]
	},

	"Module":{
		"prefix": "module",
		"description": "Module Definiton",
		"body": [
			"module ${2:NewModule} {",
			"\t$0",
			"}"
		]
	},
	"if": {
		"prefix": "if",
		"body": [
			"if (${1:condition}) {",
			"\t$0",
			"}"
		],
		"description": "If statement"
	},

	"ifelse": {
		"prefix": "ifelse",
		"body": [
			"if (${1:condition}) {",
			"\t$2",
			"} else {",
			"\t$3",
			"}"
		],
		"description": "If/else statement"
	},
	"While Statement": {
		"prefix": "while",
		"body": [
			"while (${1:condition}) {",
			"\t$0",
			"}"
		],
		"description": "While Statement"
	},
	"for": {
		"prefix": "for",
		"body": [
			"for (${1:i} = ${2:0}, $1 < ${3:max}, $1++) {",
			"\t$0",
			"}"
		],
		"description": "Indexed for loop"
	},
	"import":{
		"prefix": "import",
		"body": [
			"import ${1:Object}",
			"$0"
		],
		"description": "Import single Object"
	},
	"importfrom":{
		"prefix": "importfrom",
		"body": [
			"import ${1:*} from \"${2:folder/file}.skt\"",
			"$0"
		],
		"description": "Import objects from file"
	},
	"struct":{
		"prefix": "struct",
		"description": "Struct",
		"body": [
			"struct ${1:NewStruct} {",
			"\t$0",
			"}"
		]
	},
	"trait":{
		"prefix": "trait",
		"description": "Trait",
		"body": [
			"trait ${1:NewTrait} {",
			"\t$0",
			"}"
		]
	},
	"impl":{
		"prefix": "impl",
		"description": "Imply Trait",
		"body": [
			"impl ${1:Trait} for ${2:Object}",
			"$0"
		]
	}
}
